#include "stm32f0xx_ll_bus.h"
#include "stm32f0xx_ll_gpio.h"
#include "stm32f0xx_ll_rcc.h"
#include "stm32f0xx_ll_system.h"
#include "stm32f0xx_ll_exti.h"
#include "stm32f0xx_ll_tim.h"

int main()
{
	SystemClock_Config();

	LL_APB1_GRP1_EnableClock(LL_APB1_GRP1_PERIPH_TIM3);
	LL_AHB1_GRP1_EnableClock(LL_AHB1_GRP1_PERIPH_GPIOC);

	LL_GPIO_SetPinMode(GPIOC, LL_GPIO_PIN_9, LL_GPIO_MODE_ALTERNATE);
	LL_GPIO_SetPinMode(GPIOC, LL_GPIO_PIN_8, LL_GPIO_MODE_OUTPUT);

	LL_GPIO_SetPinPull(GPIOC, LL_GPIO_PIN_9, LL_GPIO_PULL_DOWN);

	LL_TIM_InitTypeDef TIM_InitStruct;

	TIM_InitStruct.Prescaler = __LL_TIM_CALC_PSC(SystemCoreClock, 100);
	TIM_InitStruct.CounterMode = LL_TIM_COUNTERMODE_UP;
	TIM_InitStruct.Autoreload = __LL_TIM_CALC_ARR(SystemCoreClock, TIM_InitStruct.Prescaler, 100);
	TIM_InitStruct.ClockDivision = LL_TIM_CLOCKDIVISION_DIV1;
	TIM_InitStruct.RepetitionCounter = 0;

	LL_TIM_Init(TIM3, &TIM_InitStruct);

	LL_TIM_OC_InitTypeDef TIM_OC_InitStruct;
	LL_TIM_OC_StructInit(&TIM_OC_InitStruct);

	TIM_OC_InitStruct.OCMode = LL_TIM_OCMODE_PWM1;
	TIM_OC_InitStruct.OCState = LL_TIM_OCSTATE_ENABLE;
	TIM_OC_InitStruct.OCPolarity = LL_TIM_OCPOLARITY_HIGH;
	TIM_OC_InitStruct.CompareValue = (LL_TIM_GetAutoReload(TIM3) + 1)/2;

	LL_TIM_OC_Init(TIM3, LL_TIM_CHANNEL_CH4, &TIM_OC_InitStruct);

	LL_APB1_GRP2_EnableClock(LL_APB1_GRP2_PERIPH_SYSCFG);

	NVIC_EnableIRQ(TIM3_IRQn);
	NVIC_SetPriority(TIM3_IRQn, 1);

	LL_TIM_EnableIT_UPDATE(TIM3);

	LL_TIM_EnableCounter(TIM3);

	while(1);
}

void SystemClock_Config()
{
	LL_FLASH_SetLatency(LL_FLASH_LATENCY_1);

	LL_RCC_HSI_Enable();
	while (LL_RCC_HSI_IsReady() != 1);

	LL_RCC_PLL_ConfigDomain_SYS(LL_RCC_PLLSOURCE_HSI_DIV_2,
					LL_RCC_PLL_MUL_12);

	LL_RCC_PLL_Enable();
	while (LL_RCC_PLL_IsReady() != 1);

	LL_RCC_SetAHBPrescaler(LL_RCC_SYSCLK_DIV_1);
	LL_RCC_SetSysClkSource(LL_RCC_SYS_CLKSOURCE_PLL);
	while (LL_RCC_GetSysClkSource() != LL_RCC_SYS_CLKSOURCE_STATUS_PLL);

	LL_RCC_SetAPB1Prescaler(LL_RCC_APB1_DIV_1);

	SysTick_Config(48000000/1000);
	SystemCoreClock = 48000000;
}

int brightness = 0;

void TIM3_IRQHandler()
{
	if (LL_TIM_IsActiveFlag_UPDATE(TIM3))
	{
		brightness++;
		LL_GPIO_TogglePin(GPIOC, LL_GPIO_PIN_8);

		LL_TIM_ClearFlag_UPDATE(TIM3);
	}

}

void NMI_Handler(void)
{

}

void HardFault_Handler(void)
{
	LL_GPIO_SetOutputPin(GPIOC, LL_GPIO_PIN_8);

	while (1);
}

void SVC_Handler(void)
{

}

void PendSV_Handler(void)
{

}

int tick;

void SysTick_Handler(void)
{
		tick++;
}
